[pytest]
norecursedirs = .tox .cache .git build dist
markers =
    transaction: run test in a transaction and rollback it at the end.
    xfailifnodb: xfail tests, that require DB if DB settings are not provided.
addopts =
    --log-format="%(asctime)s %(levelname)s %(message).300s"
    --doctest-glob='*.rst'
doctest_optionflags = NORMALIZE_WHITESPACE
django_find_project = false

[pep8]
ignore = E127,E128,E129,E221,E241,E731,E131,E121,E203

[tox]
minversion = 1.6.1
envlist =
    {py37,py38}-django{17,18},
    {py37,py38}-rest_framework{3,31,32},
    pep8,
    pylint,
    docs

skipsdist = True

[base]
deps = -r{toxinidir}/test-requirements.txt
       -e{toxinidir}

[testenv]
setenv =
    PYTHONPATH = {toxinidir}/
    DJANGO_SETTINGS_MODULE = tests.test_django.aproject.conf.settings
passenv = TEMPO_DB_HOST TEMPO_DB_PORT TEMPO_DB_USER TEMPO_DB_PASSWORD TEMPO_DB_NAME
deps =
    {[base]deps}
    py32: coverage==3.7.1
    django17: Django>=1.7,<1.8
    django18: Django>=1.8,<1.9
    rest_framework3: djangorestframework>=3,<3.1
    rest_framework31: djangorestframework>=3.1,<3.2
    rest_framework32: djangorestframework>=3.2,<3.3
    rest_framework{3,31,32}: Django>=1.8,<1.9

#TODO refactor redundancy in 'commands' when future versions of Tox will allow
#to reference env vars in 'commands' (issue #99 in Tox's tracker).
commands =
    py{36,37}-django{17,18}: py.test -l -vvv --cov {toxinidir}/src/ --ignore={toxinidir}/tests/test_rest_framework {posargs: --runxfail {toxinidir}/tests/ {toxinidir}/docs/ {toxinidir}/}
    rest_framework{3,31,32}: py.test -l -vvv --cov {toxinidir}/src/ {toxinidir}/tests/test_rest_framework {posargs: --runxfail {toxinidir}/tests/}

[testenv:pep8]
deps = pep8==1.6.2
commands = pep8 --show-source {toxinidir}/src/ {posargs}

[testenv:pylint]
deps = pylint==1.4.4
       -e{toxinidir}
commands = pylint tempo

[testenv:docs]
deps = -e{toxinidir}
       -r{toxinidir}/docs-requirements.txt
commands =
    make -e SPHINXOPTS='-aEW' -C {toxinidir}/docs/ html
    make -C {toxinidir}/docs/ spelling

[testenv:env]
commands = {posargs}
deps = {[base]deps}
       -r{toxinidir}/dev-requirements.txt
